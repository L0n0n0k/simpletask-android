buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}

apply plugin: 'com.android.application'

sourceSets {
        unitTest {
                java.srcDir file('src/test/java')
                resources.srcDir file('src/test/resources')
        }
}

dependencies {
        unitTestCompile files("$project.buildDir/intermediates/classes/cloudless/debug")
        unitTestCompile fileTree(dir: 'libskeep', include: '*.jar')
        unitTestCompile 'com.darwinsys:hirondelle-date4j:1.5.1'
        unitTestCompile 'com.google.guava:guava:17.0'
        unitTestCompile 'com.google.android:android:4.+'
        unitTestCompile 'junit:junit:4.11'
}

configurations {
        unitTestCompile.extendsFrom runtime
        unitTestRuntime.extendsFrom unitTestCompile
}

task unitTest(type:Test, dependsOn: assemble) {
        description = "run unit tests"
        testClassesDir = project.sourceSets.unitTest.output.classesDir
        classpath = project.sourceSets.unitTest.runtimeClasspath + files("$project.buildDir/intermediates/classes/cloudless/debug")
}

// Generate some build info. Used for the revision in the application settings and for generating the deployed file names.
 
task buildInfo {
    def revcmd = "git rev-parse --short HEAD"
    def revproc = revcmd.execute()
    ext.revision = revproc.text.trim()
    def datecmd = "git log -1 --date=short --pretty=format:%cd"
    def dateproc = datecmd.execute()
    ext.date = dateproc.text.trim()
}

// Check if all changes are commited to Git. If not throw an exception.
// This is called before deploying apk's. It will ensure that the Git revision numbers in the apk names
// and in the app settings are accurate. If there were uncommited changes, the result would be different from
// a clean checkout.

task checkCleanGit {
    def cmd = "git diff-files"
    def proc = cmd.execute()
    ext.status = proc.text.trim()
    doLast {
       if (!(ext.status == ""))
          throw new GradleException("Git not clean, commit changes before running serve:\n" + ext.status)
    }
}

if (hasProperty("DeployToWebspace")) {
    task deploy(type: Copy, dependsOn: [assembleRelease, buildInfo, checkCleanGit]) {
        from 'build/outputs/apk/'
        into deployPath + '/master/' + buildInfo.ext.date + "-" + buildInfo.ext.revision
        include '**/*release.apk'
        rename 'simpletask-android-free-release.apk', 'simpletask-free-' + buildInfo.ext.date + "-" + buildInfo.ext.revision + '.apk'
        rename 'simpletask-android-cloudless-release.apk', 'simpletask-cloudless-' + buildInfo.ext.date + "-" + buildInfo.ext.revision + '.apk'
    }
}

// Call gradle with -Plint to enable all warnings.
if (hasProperty("lint")) { 
   tasks.withType(Compile) { 
      options.compilerArgs << "-Xlint:all" 
   } 
}

android {


    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    buildToolsVersion "20.0.0"
    compileSdkVersion 20

    defaultConfig {
        versionName '5.2.6'
        versionCode 1534
	    minSdkVersion 14
        targetSdkVersion 20
        buildConfigField "String", "GIT_REV", "\"" + buildInfo.ext.revision + "\""
    }

    productFlavors {
        free {
            applicationId 'nl.mpcjanssen.todotxtholo'
        }
        cloudless {
            applicationId 'nl.mpcjanssen.simpletask'
        }
    }

    signingConfigs {
        release {
            keyAlias = "mpcjanssen.nl"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    freeCompile fileTree(dir: 'libs', include: '*.jar')
    compile fileTree(dir: 'libskeep', include: '*.jar')
    compile 'com.intellij:annotations:+@jar'
    compile 'com.android.support:support-v4:20.0.0'
    compile 'org.commonjava.googlecode.markdown4j:markdown4j:2.2-cj-1.0'
    compile 'com.darwinsys:hirondelle-date4j:1.5.1'
    compile 'com.google.guava:guava:17.0'
}
check.dependsOn unitTest
preBuild.dependsOn buildInfo

// Only sign if we have keystore properties in the gradle.properties in ~/.gradle
if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}
